[
  {
    "path": "posts/2021-10-03-nfl-scorelines/",
    "title": "NFL Scorelines",
    "description": "Which NFL scores have never happened?",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2021-10-03",
    "categories": [
      "nfl",
      "scraping"
    ],
    "contents": "\r\nThere have been over 16,860 games of professional American Football. There have been some rule changes to the points scoring system over that time, but clearly some scores are going to be more likely than others. As a touchdown plus extra point is worth 7, we’d expect a higher amount of games with multiples of 7 in the scoreline. Similarly, we’d expect more scorelines with multiples of 3 (the number of extra points).\r\nGiven the large number of games already played, we would expect that it would be rare for unique, never happened before, scorelines to occur. In fact, there is a fun website called Scorigami that tracks the likelihood of this happening for each ongoing NFL game.\r\nThere is also a nice neat list of the number of times each pro scoreline has occurred at the Pro Football Reference website. One important thing to note is that this list does not distinguish between home/road teams. So, for example a 17-20 road win is considered to be the same as a 20-17 home win.\r\nIn this post, I thought it would be fun to visualize these scorelines and how often they occurred.\r\n\r\nGetting the Data\r\nThe first step is to scrape the data. We will do that using the rvest package:\r\n\r\n\r\nlibrary(rvest)\r\nlibrary(tidyverse)\r\n\r\nurl <- \"https://www.pro-football-reference.com/boxscores/game-scores.htm\"\r\n\r\ntab <- url %>%\r\n  read_html(url) %>%\r\n html_node(\"table\") %>%\r\n html_table()\r\n\r\nhead(tab)\r\n\r\n\r\n# A tibble: 6 x 9\r\n     Rk Score  PtsW  PtsL PtTot    PD Count ``        `Last Game`     \r\n  <int> <chr> <int> <int> <int> <int> <int> <chr>     <chr>           \r\n1     1 20-17    20    17    37     3   271 all games Chicago Bears v~\r\n2     2 27-24    27    24    51     3   219 all games Los Angeles Ram~\r\n3     3 17-14    17    14    31     3   197 all games Atlanta Falcons~\r\n4     4 23-20    23    20    43     3   189 all games New York Jets v~\r\n5     5 24-17    24    17    41     7   169 all games Tennessee Titan~\r\n6     6 13-10    13    10    23     3   163 all games Detroit Lions v~\r\n\r\ntail(tab)\r\n\r\n\r\n# A tibble: 6 x 9\r\n     Rk Score  PtsW  PtsL PtTot    PD Count ``        `Last Game`     \r\n  <int> <chr> <int> <int> <int> <int> <int> <chr>     <chr>           \r\n1  1061 70-27    70    27    97    43     1 all games Los Angeles Ram~\r\n2  1062 42-38    42    38    80     4     1 all games Los Angeles Ram~\r\n3  1063 11-6     11     6    17     5     1 all games St. Louis Rams ~\r\n4  1064 46-9     46     9    55    37     1 all games Los Angeles Ram~\r\n5  1065 66-0     66     0    66    66     1 all games Rochester Jeffe~\r\n6  1066 50-28    50    28    78    22     1 all games San Diego Charg~\r\n\r\n\r\nWe could tidy these data up, but they already contain the three columns that we need. The PtsW and PtsL columns contain the scores for each team. The Count column contains the number of times each scoreline occurred.\r\nWhat we can do is plot these data as a matrix using geom_tile() and filling the color of each tile based on the count variable.\r\nWe also need to know the range of possible scores to limit the axes. These are:\r\n\r\n\r\nrange(tab$PtsW)\r\n\r\n\r\n[1]  0 73\r\n\r\nrange(tab$PtsL)\r\n\r\n\r\n[1]  0 51\r\n\r\n\r\nThis is the plot - you may need to zoom in to check each score, but they should be visible:\r\n\r\n\r\nggplot(tab, aes(x=PtsW, y=PtsL, fill=sqrt(Count))) +\r\n  geom_tile(color='black') +\r\n  geom_text(aes(label=Count), size=1.8, color='black')+\r\n  scale_fill_continuous(low=\"#FFF973\", high=\"#F92A0D\") +\r\n  scale_y_reverse(breaks=seq(0,52,2)) +\r\n  scale_x_continuous(breaks=seq(0,74,2),position = \"top\")+\r\n  xlab(\"Winning Team Points\") +\r\n  ylab(\"Losing Team Points\") +\r\n  theme(\r\n    plot.background = element_rect(fill=\"white\"),\r\n    panel.background = element_rect(fill=\"white\"),\r\n    panel.border = element_rect(fill=NA, color=\"white\", size=0.15, linetype=\"solid\"),\r\n    axis.text = element_text(color=\"black\", size=rel(0.7)),\r\n    axis.text.y  = element_text(hjust=1),\r\n    legend.position = \"none\"\r\n     )\r\n\r\n\r\n\r\n\r\n\r\nI chose to make the tick marks on the x and y axes separated by 2. I think this still makes the chart readable while not making it too clustered. Perhaps one issue with the above graph is that it isn’t that easy to follow rows and columns as not the tiles with missing values do not have borders.\r\nIf we had borders it might be easier to see which scores have yet to occur. To make a plot with borders around each tile, we need to include every combination of values in the data.frame. I did this by joining the tab data.frame with one that contained each winning and losing possible score, and a 0 in the Count column, then summing across each win/loss score, and then making the zeros into NA so that they would appear white in the final plot.\r\n\r\n\r\neg <- expand.grid(0:74,0:52)\r\n\r\ndf <- \r\n  data.frame(\r\n  PtsW = eg[,1],\r\n  PtsL = eg[,2],\r\n  Count=0\r\n) \r\n\r\ndf <- \r\n  full_join(df, tab %>% select(PtsW, PtsL, Count)) %>%\r\n  group_by(PtsW,PtsL) %>%\r\n  summarise(Count=sum(Count))\r\n\r\nhead(df)\r\n\r\n\r\n# A tibble: 6 x 3\r\n# Groups:   PtsW [1]\r\n   PtsW  PtsL Count\r\n  <int> <int> <dbl>\r\n1     0     0    73\r\n2     0     1     0\r\n3     0     2     0\r\n4     0     3     0\r\n5     0     4     0\r\n6     0     5     0\r\n\r\ndf$Count <- ifelse(df$Count==0,NA,df$Count)\r\n\r\nhead(df)\r\n\r\n\r\n# A tibble: 6 x 3\r\n# Groups:   PtsW [1]\r\n   PtsW  PtsL Count\r\n  <int> <int> <dbl>\r\n1     0     0    73\r\n2     0     1    NA\r\n3     0     2    NA\r\n4     0     3    NA\r\n5     0     4    NA\r\n6     0     5    NA\r\n\r\n\r\nThis is what the plot now looks like:\r\n\r\n\r\n\r\nggplot(df, aes(x=PtsW, y=PtsL, fill=sqrt(Count))) +\r\n  geom_tile(color='black') +\r\n  geom_text(aes(label=Count), size=1.8, color='black')+\r\n  scale_fill_continuous(low=\"#FFF973\", high=\"#F92A0D\", na.value=\"white\") +\r\n  scale_y_reverse(breaks=seq(0,56,2)) +\r\n  scale_x_continuous(breaks=seq(0,76,2),position = \"top\")+\r\n  xlab(\"Winning Team Points\") +\r\n  ylab(\"Losing Team Points\") +\r\n  theme(\r\n    plot.background = element_rect(fill=\"white\"),\r\n    panel.background = element_rect(fill=\"white\"),\r\n    panel.border = element_rect(fill=NA, color=\"white\", size=0.15, linetype=\"solid\"),\r\n    axis.text = element_text(color=\"black\", size=rel(0.7)),\r\n    axis.text.y  = element_text(hjust=1),\r\n    legend.position = \"none\"\r\n     )\r\n\r\n\r\n\r\n\r\n\r\nThis is pretty interesting. There aren’t many scores along the 1,2,4,5 and 11 points rows/columns.\r\nOne final thing I wondered was what if we looked at total points for games. How many times has each combined point score been achieved.\r\n\r\n\r\ndf$Count <- ifelse(is.na(df$Count), 0, df$Count)\r\ndf$Total <- df$PtsW + df$PtsL\r\n\r\ndf.total <- \r\n  df %>% \r\n  group_by(Total) %>%\r\n  summarise(Count = sum(Count))\r\n\r\n\r\nhead(df.total)\r\n\r\n\r\n# A tibble: 6 x 2\r\n  Total Count\r\n  <int> <dbl>\r\n1     0    73\r\n2     1     0\r\n3     2     5\r\n4     3    59\r\n5     4     0\r\n6     5     5\r\n\r\n\r\n\r\n\r\nggplot(df.total, aes(x=Total, y=Count)) +\r\n  geom_col(color='black',fill='salmon') +\r\n  ylab(\"Frequency\") +\r\n  xlab(\"Total Score\") +\r\n  ggtitle(\"Frequency of Pro Football Point Totals\") +\r\n  theme_classic()\r\n\r\n\r\n\r\n\r\n\r\nWe can also identify those scores that have never occurred.\r\n\r\n\r\ndf.total %>%\r\n  filter(Count==0)\r\n\r\n\r\n# A tibble: 25 x 2\r\n   Total Count\r\n   <int> <dbl>\r\n 1     1     0\r\n 2     4     0\r\n 3    92     0\r\n 4   100     0\r\n 5   102     0\r\n 6   104     0\r\n 7   107     0\r\n 8   108     0\r\n 9   109     0\r\n10   110     0\r\n# ... with 15 more rows\r\n\r\nWhat’s interesting here is that after total scores of 1 and 4, the next highest total score that has never occurred is 92!\r\nThere are other things we could look at with these data such as what scores have never occurred based on who is home/on the road. Also we could look at the rate of unique scores - how often have they occured over time.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-10-03-nfl-scorelines/nflplot.png",
    "last_modified": "2021-10-03T17:27:53-05:00",
    "input_file": "nfl-scorelines.knit.md",
    "preview_width": 500,
    "preview_height": 417
  },
  {
    "path": "posts/2020-10-21-animated-covid-plots/",
    "title": "Animated Covid Plots",
    "description": "Scraping Texas Covid data and making animated plots",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-21",
    "categories": [
      "time_series",
      "animation"
    ],
    "preview": "posts/2020-10-21-animated-covid-plots/covid.gif",
    "last_modified": "2020-10-21T21:54:15-05:00",
    "input_file": "animated-covid-plots.utf8.md"
  },
  {
    "path": "posts/2020-10-20-tsa-passenger-screenings-during-covid/",
    "title": "TSA passenger screenings during Covid",
    "description": "Examining how total USA airline passenger changes following the Covid pandemic",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-20",
    "categories": [
      "time_series"
    ],
    "preview": "posts/2020-10-20-tsa-passenger-screenings-during-covid/tsa-passenger-screenings-during-covid_files/figure-html5/unnamed-chunk-8-1.png",
    "last_modified": "2020-10-20T20:54:24-05:00",
    "input_file": "tsa-passenger-screenings-during-covid.utf8.md",
    "preview_width": 1536,
    "preview_height": 960
  },
  {
    "path": "posts/2020-10-16-apportionment-methods/",
    "title": "Apportionment Methods",
    "description": "Discussion of apportionment problems and the rabbit hole I went down.",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-17",
    "categories": [
      "puzzles",
      "politics",
      "history",
      "Rpackage"
    ],
    "preview": "posts/2020-10-16-apportionment-methods/apportionment-methods_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2020-10-16T17:23:47-05:00",
    "input_file": "apportionment-methods.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-17-scoring-doesnt-stop/",
    "title": "Scoring doesn't Stop?",
    "description": "Looking at the trend of high scoring games in the EPL",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-17",
    "categories": [
      "soccer",
      "Rpackage"
    ],
    "preview": "posts/2020-10-17-scoring-doesnt-stop/scoring-doesnt-stop_files/figure-html5/unnamed-chunk-6-1.png",
    "last_modified": "2020-10-18T20:52:40-05:00",
    "input_file": "scoring-doesnt-stop.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-15-langford-sequences/",
    "title": "Langford Sequences",
    "description": "Describing Langford and Skolem sequences and how to search for them in R.",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-16",
    "categories": [
      "puzzles"
    ],
    "preview": "posts/2020-10-15-langford-sequences/langford-sequences_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2020-10-15T23:09:52-05:00",
    "input_file": "langford-sequences.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-14-patterns-of-female-names-over-time/",
    "title": "Patterns of Female Names over Time",
    "description": "Investigating similarity of name popularity over time.",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-15",
    "categories": [
      "babynames",
      "clustering",
      "time_series"
    ],
    "preview": "posts/2020-10-14-patterns-of-female-names-over-time/patterns-of-female-names-over-time_files/figure-html5/unnamed-chunk-32-1.png",
    "last_modified": "2020-10-14T23:44:01-05:00",
    "input_file": "patterns-of-female-names-over-time.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-13-world-cup-birthday-problem/",
    "title": "World Cup Birthday Problem",
    "description": "Do world cup squad members share birthdays?",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-14",
    "categories": [
      "puzzles",
      "regex",
      "soccer"
    ],
    "preview": "posts/2020-10-13-world-cup-birthday-problem/world-cup-birthday-problem_files/figure-html5/unnamed-chunk-9-1.png",
    "last_modified": "2020-10-14T16:20:06-05:00",
    "input_file": "world-cup-birthday-problem.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-10-13-cat-names/",
    "title": "Cat Names",
    "description": "Identifying cats that are named after animals.",
    "author": [
      {
        "name": "James Curley",
        "url": "jamescurley.blog"
      }
    ],
    "date": "2020-10-13",
    "categories": [
      "cats",
      "regex"
    ],
    "preview": "posts/2020-10-13-cat-names/cat-names_files/figure-html5/unnamed-chunk-15-1.png",
    "last_modified": "2020-10-13T19:44:26-05:00",
    "input_file": "cat-names.utf8.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Blog",
    "description": "Welcome to this blog, James' R Blog. I hope you enjoy \nreading it!",
    "author": [
      {
        "name": "James Curley",
        "url": "https://jamescurley.blog"
      }
    ],
    "date": "2020-10-13",
    "categories": [],
    "preview": {},
    "last_modified": "2020-10-13T16:05:33-05:00",
    "input_file": "welcome.utf8.md"
  }
]
